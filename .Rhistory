library(plyr)
library(dplyr)
clinton.txt <- readRDS('clinton_tweet_cleaned.RData')
trump.txt <- readRDS('trump_tweet_cleaned.RData')
tweet <- c(clinton.txt, trump.txt)
knitr::opts_chunk$set(echo = F)
score.sentiment <- function(sentences, pos.words, neg.words, .progress = 'none') {
require(plyr)
require(stringr)
# use laply to return scores from a vector of sentences
scores <- laply(sentences, function(sentence, pos.words, neg.words) {
# clean up sentences
sentence <- gsub('[[:punct:]]', '', sentence)
sentence <- gsub('[[:cntrl:]]', '', sentence)
sentence <- gsub('\\d+', '', sentence)
sentence <- gsub('http\\S+\\s*', '', sentence)
sentence <- gsub('#\\w+ *', '', sentence)
sentence <- gsub('@\\w+ *', '', sentence)
# split into words
word.list <- str_split(sentence, '\\s+')
words <- unlist(word.list)
# compare words to the dictionaries of positive & negative terms
pos.matches <- match(words, pos.words)
neg.matches <- match(words, neg.words)
# find non-NA values, i.e., matches
pos.matches <- !is.na(pos.matches)
neg.matches <- !is.na(neg.matches)
#  Score  =  Number of positive words  -  Number of negative words
score <- sum(pos.matches) - sum(neg.matches)
return(score)
}, pos.words, neg.words, .progress = .progress )
scores.df <- data.frame(score = scores, tweet = sentences)
return(scores.df)
}
pos <- readLines("positive_words.txt")
neg <- readLines("negative_words.txt")
tweet.num <- c(length(clinton.txt), length(trump.txt))
scores <- score.sentiment(tweet, pos, neg, .progress = 'text')
scores$name <- factor(rep(c('Clinton', 'Trump'), tweet.num))
head(scores)
scores$sentiment <- 0
scores$sentiment[scores$score <= -2] <- -1
scores$sentiment[scores$score >= 2] <- 1
library(ggplot2)
ggplot(scores[scores$name == 'Clinton', ], aes(x = factor(sentiment))) +
geom_bar(aes(y = (..count..)/sum(..count..), fill = factor(sentiment))) +
labs(x = 'Sentiment', y = 'Count', title = 'Clinton') +
scale_fill_discrete(name = "Sentiment",
breaks = c(-1, 0, 1),
labels=c("Negative", "Neutral", "Positive"))
plot1 <- ggplot(scores[scores$name == 'Clinton', ], aes(x = factor(sentiment))) +
geom_bar(aes(y = (..count..)/sum(..count..), fill = factor(sentiment))) +
labs(x = 'Sentiment', y = 'Frequency', title = 'Clinton') +
scale_fill_discrete(name = "Sentiment",
breaks = c(-1, 0, 1),
labels=c("Negative", "Neutral", "Positive"))
plot2 <- ggplot(scores[scores$name == 'Trump', ], aes(x = factor(sentiment))) +
geom_bar(aes(y = (..count..)/sum(..count..), fill = factor(sentiment))) +
labs(x = 'Sentiment', y = 'Frequency', title = 'Trump') +
scale_fill_discrete(name = "Sentiment",
breaks = c(-1, 0, 1),
labels=c("Negative", "Neutral", "Positive"))
grid.arrange(plot1, plot2, nrow = 2)
library(gridExtra)
plot1 <- ggplot(scores[scores$name == 'Clinton', ], aes(x = factor(sentiment))) +
geom_bar(aes(y = (..count..)/sum(..count..), fill = factor(sentiment))) +
labs(x = 'Sentiment', y = 'Frequency', title = 'Clinton') +
scale_fill_discrete(name = "Sentiment",
breaks = c(-1, 0, 1),
labels=c("Negative", "Neutral", "Positive"))
plot2 <- ggplot(scores[scores$name == 'Trump', ], aes(x = factor(sentiment))) +
geom_bar(aes(y = (..count..)/sum(..count..), fill = factor(sentiment))) +
labs(x = 'Sentiment', y = 'Frequency', title = 'Trump') +
scale_fill_discrete(name = "Sentiment",
breaks = c(-1, 0, 1),
labels=c("Negative", "Neutral", "Positive"))
grid.arrange(plot1, plot2, nrow = 2)
median(scores$score)
theme_set(theme_bw())
plot1 <- ggplot(scores[scores$name == 'Clinton', ], aes(x = factor(sentiment))) +
geom_bar(aes(y = (..count..)/sum(..count..), fill = factor(sentiment))) +
labs(x = 'Sentiment', y = 'Frequency', title = 'Clinton') +
scale_fill_discrete(name = "Sentiment",
breaks = c(-1, 0, 1),
labels=c("Negative", "Neutral", "Positive"))
plot2 <- ggplot(scores[scores$name == 'Trump', ], aes(x = factor(sentiment))) +
geom_bar(aes(y = (..count..)/sum(..count..), fill = factor(sentiment))) +
labs(x = 'Sentiment', y = 'Frequency', title = 'Trump') +
scale_fill_discrete(name = "Sentiment",
breaks = c(-1, 0, 1),
labels=c("Negative", "Neutral", "Positive"))
grid.arrange(plot1, plot2, nrow = 2)
setwd("~/Documents/Github/Repos/blog/yanfei-wu.github.io")
serve_site()
library(blogdown)
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
