<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Yanfei Wu</title>
    <link>/tags/python/index.xml</link>
    <description>Recent content in Python on Yanfei Wu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy;2016 Yanfei Wu</copyright>
    <atom:link href="/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Machine Learning for Employee Retention</title>
      <link>/blog/2017-04-28_employee_retention/</link>
      <pubDate>Fri, 28 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>/blog/2017-04-28_employee_retention/</guid>
      <description>

&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: The code and full report for this project is available in &lt;a href=&#34;https://github.com/yanfei-wu/ml_udacity/tree/master/capstone&#34;&gt;my Github Repository&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;1-introduction&#34;&gt;1. Introduction&lt;/h3&gt;

&lt;p&gt;Recruiting excellent employees is one thing, but keeping them is another. While losing employees who are poor performers can have positive effects, high employee turnover rate is generally regarded as bad for the business. It increases expenses since the process of identifying, hiring and training employees is very expensive. Studies have shown that cost related to directly replacing an employee can be as high as 50–60% of the employee’s annual salary, and the total cost of turnover can reach as high as 90–200% of the employee’s annual salary.[1] Even worse, frequent employee turnover can destroy the company morale, resulting in decreased performance in the workplace. Therefore, retaining its valuable and talented employees is vital to a company&amp;rsquo;s success.&lt;/p&gt;

&lt;p&gt;A novel approach to implementing an effective retention program and preventing key workers from leaving prematurely is to use machine learning techniques. For example, a supervised classification model can be trained on a dataset containing features related to the employees and whether they left the company (a dataset that is available to many companies). Building such a model provides insights to key factors that result in employee turnover. It also allows the management and the human resource team to predict which employee is going to leave so that they could intervene immediately.&lt;/p&gt;

&lt;p&gt;The goal of this project is to build such a supervised binary classification model. A simulated dataset (available in &lt;a href=&#34;https://www.kaggle.com/ludobenistant/hr-analytics&#34;&gt;Kaggle&lt;/a&gt;) containing a series of employee-related features and a binary class label of whether the employee left or not is used. The expected outcome of this project is to help the management and the human resource team:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;predict which current employee is going to leave (class label) so that they could intervene immediately;&lt;/li&gt;
&lt;li&gt;identify which are the most important factors (features) that lead to employee turnover so that changes can be implemented to ensure employees remain in place while maintaining high work performance and productivity.&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;2-datasets-and-exploratory-visualization&#34;&gt;2. Datasets and Exploratory Visualization&lt;/h3&gt;

&lt;p&gt;The dataset contains 14,999 rows and 10 columns. There are both numerical and categorical features in this dataset, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&#39;satisfaction_level&#39;&lt;/code&gt;: employee satisfaction level (numerical, float numbers between 0 and 1)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&#39;last_evaluation&#39;&lt;/code&gt;: the score from the employee&amp;rsquo;s last evaluation (numerical, float numbers between 0 and 1)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&#39;number_project&#39;&lt;/code&gt;: the number of projects the employee worked on (numerical, integers)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&#39;average_monthly_hours&#39;&lt;/code&gt;: the average monthly hours the employee spent on work (numerical, integers)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&#39;time_spend_company&#39;&lt;/code&gt;: number of year the employee spent at the company (numerical, integers)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&#39;work_accident&#39;&lt;/code&gt;: whether the employee had a work accident (categorical, &amp;lsquo;0&amp;rsquo; - no, &amp;lsquo;1&amp;rsquo; - yes)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&#39;promotion_last_5year&#39;&lt;/code&gt;: whether the employee had a promotion in the last 5 years (categorical, &amp;lsquo;0&amp;rsquo; - no, &amp;lsquo;1&amp;rsquo; - yes)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&#39;sales&#39;&lt;/code&gt;: the Department the employee works (categorical, &amp;lsquo;sales&amp;rsquo;, &amp;lsquo;accounting&amp;rsquo;, &amp;lsquo;hr&amp;rsquo;, &amp;lsquo;technical&amp;rsquo;, &amp;lsquo;support&amp;rsquo;, &amp;lsquo;management&amp;rsquo;, &amp;lsquo;IT&amp;rsquo;, &amp;lsquo;product_mng&amp;rsquo;, &amp;lsquo;marketing&amp;rsquo;, &amp;lsquo;RandD&amp;rsquo;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&#39;salary&#39;&lt;/code&gt;: the salary of the employee (categorical, &amp;lsquo;low&amp;rsquo;, &amp;lsquo;medium&amp;rsquo;, &amp;lsquo;high&amp;rsquo;)&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The target variable in the dataset is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&#39;left&#39;&lt;/code&gt;: whether the employee has left or not (categorical, &amp;lsquo;0&amp;rsquo; - no, &amp;lsquo;1&amp;rsquo; - yes)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Note that the number of employees who left in the dataset is 3571 and is 23.81% of the total employees (14,999).&lt;/em&gt; As discussed above, with the unbalanced class distributions, care must be taken when choosing performance measure for the models. F2 score will be used in order to weight recall higher than precision.&lt;/p&gt;

&lt;p&gt;Also note is that there are no &lt;code&gt;NaN&lt;/code&gt; values and all the numerical values are within reasonable range. No outliers are detected.&lt;/p&gt;

&lt;p&gt;Both the numerical and the categorical features are visualized below.&lt;br /&gt;
&lt;img src=&#34;../employee_file/numerical.png&#34; class=&#34;img-responsive&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Some observations from the numerical features are&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;time_spend_company&lt;/code&gt; and &lt;code&gt;number_project&lt;/code&gt; take integer values. This dataset only considers employees at the company for 2 or more years with 2 or more projects.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&#39;average_monthly_hours&#39;&lt;/code&gt;, &lt;code&gt;&#39;last_evaluation&#39;&lt;/code&gt;, and &lt;code&gt;&#39;satisfaction_level&#39;&lt;/code&gt; take continuous values. All of them show bimodal distributions.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;../employee_file/categorical.png&#34; class=&#34;img-responsive&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Some Observations from the categorical features are&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&#39;work_accident&#39;&lt;/code&gt; and &lt;code&gt;&#39;promotion_last_5years&#39;&lt;/code&gt; are two-level categorical variables. Both show very unbalanced distribution (with the majority being category 0: no work accident or no promotion in last 5 years)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&#39;salary&#39;&lt;/code&gt; has 3 levels: low, medium and high. The salary structure seems to reflect the reality, with the majority of employees having low and medium salaries.&lt;/li&gt;
&lt;li&gt;Employees from 10 different departments are included in the dataset, with the majority of employees from sales, technical and support. This also somewhat reflects the reality in many companies.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A correlation matrix of the dataset (excluding &lt;code&gt;&#39;department&#39;&lt;/code&gt;) is shown below.&lt;br /&gt;
&lt;img src=&#34;../employee_file/correlationmatrix.png&#34; class=&#34;img-responsive&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The correlation matrix shows that:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;There is a strong negative correlation between &lt;code&gt;&#39;satisfaction_level&#39;&lt;/code&gt; and &lt;code&gt;&#39;left&#39;&lt;/code&gt; with a correlation coefficient of -0.39.&lt;/li&gt;
&lt;li&gt;Variables &lt;code&gt;&#39;number_project&#39;&lt;/code&gt;, &lt;code&gt;&#39;average_monthly_hours&#39;&lt;/code&gt;, and &lt;code&gt;&#39;last_evaluation&#39;&lt;/code&gt; show strong positive correlations, which makes sense intuitively.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;4-models&#34;&gt;4. Models&lt;/h3&gt;

&lt;h4 id=&#34;4-1-algorithms-and-techniques&#34;&gt;4.1 Algorithms and Techniques&lt;/h4&gt;

&lt;p&gt;It is a binary classification problem and there are a number of algorithms available in the &lt;code&gt;scikit-learn&lt;/code&gt; library. To find the best model for the problem, 6 different algirithms are used to train the dataset, including Logistic Regression, Linear Discriminant Analysis, K-Nearest Neighbors, Decision Trees, Support Vector Machines, and Random Forest. All the algorithms are evaluated out-of-box, i.e., default hyperparameters will be used. A naive benchmark model is also built to set a baseline for model performance. The benchmark model is to predict that all the employees are leaving. In other words, the management and HR team treat every single employee as if he/she is leaving. Note that implementing such a naive classifier will probably lower the employee turnover rate but most of the time, it is not a realistic retention program for most companies. So, it is only for comparison purpose here.&lt;/p&gt;

&lt;p&gt;Typically, the performance of a classification model can be measured by accuracy, i.e., the percentage of correct predictions. But in this case, it is not the best metric due to the class imbalance (~25% class &amp;lsquo;left&amp;rsquo; vs ~75% class &amp;lsquo;stay&amp;rsquo;). Instead, we can use a combination of precision and recall as an unambiguous way to show the prediction results. In this specific problem, we would like to avoid predicting valuable employees who are actually leaving as staying and thus taking no actions. Therefore, the so-called F2 score is used. It is a weighted average of precision and recall and it places more emphasis on recall (minimizing False Negatives).&lt;/p&gt;

&lt;p&gt;Note that before the dataset can be used to train the classificatin models, some preprocessing steps are done, including one-hot encoding of the categorical features and normalization of the numerical features. The latter ensures that each feature is treated equally when applying supervised learners.&lt;/p&gt;

&lt;h4 id=&#34;4-2-model-selection-and-feature-importance&#34;&gt;4.2 Model Selection and Feature Importance&lt;/h4&gt;

&lt;p&gt;In order to evaluate each algorithm, a 10-fold cross validation procedure is carried out. The cross validation F2 scores for the 6 models are shown in the boxplot below. The F2 score of the benchmark model is also plotted as a baseline.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../employee_file/modelcomparison.png&#34; class=&#34;img-responsive&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Based on the comparison, Decision Trees classifier and Random Forest both perform very well. They give much better F2 score than the benchmark classifier. Generally, Random Forest algorithm is less likely to overfit the data compared to Decision Trees. So in this case, it is chosen as the best model.&lt;/p&gt;

&lt;p&gt;The Random Forest model is further tuned with &lt;code&gt;GridSearchCV&lt;/code&gt;. The best 10-fold cross validation F2 score is 0.9754, which shows slight improvevment than the score from the out-of-box Ramdom Forest model (0.9660).&lt;/p&gt;

&lt;p&gt;With a classification model like the Random Forest classifier built above, management and human resource team are now able to predict if a current employee is leaving so that they can take immediate internvention. Another key information for an effective employee retention program is the knowledge of the most important factors on employee turnover. Luckily, with Random Forest classifier, we can easily obtain the feature importance from a trained model. A barplot of the top 5 features from the optimized Random Forest model trained on the entire training set is shown below.&lt;/p&gt;

&lt;p&gt;Thses 5 features consists about &lt;strong&gt;95%&lt;/strong&gt; of the total feature importance. &lt;code&gt;&#39;satisfaction_level&#39;&lt;/code&gt; is determined to be the most important feature, which is consistant with its high correlation coefficient with the target variable &lt;code&gt;&#39;left&#39;&lt;/code&gt; as shown in the correlation matrix. The other features highly relevant to employee turnover are &lt;code&gt;&#39;average_monthly_hours&#39;&lt;/code&gt;, &lt;code&gt;&#39;number_project&#39;&lt;/code&gt;, &lt;code&gt;&#39;time_spend_company&#39;&lt;/code&gt;, and &lt;code&gt;&#39;last_evaluation&#39;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../employee_file/featureimportance.png&#34; class=&#34;img-responsive&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;5-conclusion&#34;&gt;5. Conclusion&lt;/h3&gt;

&lt;p&gt;To summarize, this project outlines a machine learning approach to help implement an effective employee retention program. A synthesized dataset containing both numerical and categorical features of the employees, as well as a binary label of whether the employee left or not is used to build a binary classification model. The categorical features are transformed to numerical values by one-hot encoding. The numerical features are rescaled to the same range (0 to 1) so that the learners can treat each feature equally. Different classification algorithms are compared. The performance of the models are measured by the F2 score in order to put more weights on recall. K fold cross validation procedure is implemented to evaluate the models. Random Forest classifier is chosen as it gives the best cross validation F2 score. The model is further tuned using &lt;code&gt;GridSearchCV&lt;/code&gt;. The final model shows excellent F2 score (much better than the naive benchmark classifier) and appears to be generalizable to unseen data. With this classification model, we can predict whether a current employee will leave given the features of the employee. Feature importance analysis reveals the top 5 features, which consist about 95% of the total importance. These top features can help management and human resource team understand why their emplpyees leave.&lt;/p&gt;

&lt;p&gt;However, the prediction results seem too good to be true in reality. But data leakage should not be a problem here since feature normalization is performed on each fold of cross validation instead of on the entire dataset. So, one possible explanation for this exceptionally good result could be that the synthesized dataset is just too ideal. The real-world data is normally a lot messier. Also, it is reasonable to believe that employee turnover characteristic would be different for each individual company, or at least for each type of industry. Therefore, this specific model obtained here is likely not suitable for specific companies out there. Nevertheless, the general machine learning approach described here should be a good practice in reality.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;[1] Cascio, W.F. 2006. Managing Human Resources: Productivity, Quality of Work Life, Profits (7th ed.). Burr Ridge, IL: Irwin/McGraw-Hill. Mitchell, T.R., Holtom, B.C., &amp;amp; Lee, T.W. 2001. How to keep your best employees&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>South Park Lines: Who is Speaking? (Part 1)</title>
      <link>/blog/2017-03-20_southpark/</link>
      <pubDate>Fri, 24 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>/blog/2017-03-20_southpark/</guid>
      <description>

&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;South Park is an adult animated sitcom about four potty-mouthed grade boys Eric Cartman, Stan Marsh, Kyle Broflovshi, and Kenny McCormick and their adventures in a fictional Colorado town called South Park. The show debuted in 1997 and has been through 20 seasons now. It is such a famous show and it has won a lot of awards but for some reason I never really watched this show (except for a couple YouTube clips).&lt;/p&gt;

&lt;p&gt;Recently, I found a dataset from &lt;a href=&#34;https://www.kaggle.com/tovarischsukhov/southparklines&#34;&gt;Kaggle&lt;/a&gt; with the lines of the first 18 seasons. These lines have been annotated with season, episode and speaker. I was curious about what I can find out about the show just from this dataset. Also, I thought it would be interesting to build a classification model to guess the speakers based on the lines. This post will focus on the first part using data visualization. All the codes for this post can be found in &lt;a href=&#34;https://github.com/yanfei-wu/tv_lines&#34;&gt;my Github Repository&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here it goes.&lt;/p&gt;

&lt;h3 id=&#34;get-to-know-the-show&#34;&gt;Get to Know the Show&lt;/h3&gt;

&lt;p&gt;First, I looked at some basic information about the show based on this dataset, such as the number of episodes, the number of characters, the number of lines, etc. The information is summarized in the table below:&lt;/p&gt;

&lt;div&gt;
&lt;table border=&#34;1&#34; align=&#34;center&#34;&gt;
  &lt;thead&gt;
    &lt;tr align=&#34;center&#34;&gt;
      &lt;th&gt; Seasons &lt;/th&gt;
      &lt;th&gt;  Episodes  &lt;/th&gt;
      &lt;th&gt;  Characters  &lt;/th&gt;
      &lt;th&gt;  Lines  &lt;/th&gt;
      &lt;th&gt;  Words  &lt;/th&gt;
      &lt;th&gt;  Words (Unique)  &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr align=&#34;center&#34;&gt;
      &lt;td width=&#34;15%&#34;&gt; 18 &lt;/td&gt;
      &lt;td width=&#34;15%&#34;&gt; 257 &lt;/td&gt;
      &lt;td width=&#34;15%&#34;&gt; 3,949 &lt;/td&gt;
      &lt;td width=&#34;15%&#34;&gt; 70,789 &lt;/td&gt;
      &lt;td width=&#34;15%&#34;&gt; 811,296 &lt;/td&gt;
      &lt;td width=&#34;20%&#34;&gt; 30,347 &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt; &lt;/p&gt;
&lt;/div&gt;  

&lt;p&gt;So how long are the lines? The number of words in a line is used to define the line length. The distribution of the line length shows that the majority of the lines in the show are relatively short (with a median of 8 words and a 75 percentile of 14 words).&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../southpark_file/linelength_dist.png&#34; class=&#34;img-responsive&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Another question is how did the show evolve over the seasons in terms of the number of episodes, characters, and lines?&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../southpark_file/over_season.png&#34; class=&#34;img-responsive&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Based on the plot above, the show started off with 13 episodes and around 250 characters in Season 1. On average, it had about 320 lines per episode but the lines seem to be short. The first season was clearly a success as we can see a big jump in the numbers of episodes and characters as well as the average numbers of lines and words in Season 2. Overall, these numbers peaked from Season 2 through Season 4 followed by some slow decay. During Season 10 to Season 15, more characters were included in each season although each season remained to have 14 episodes. The average number of lines, interestingly, did not show a corresponding increase. But the lines were definitely getting longer on average from Season 13.&lt;/p&gt;

&lt;h3 id=&#34;get-to-know-the-characters&#34;&gt;Get to Know the Characters&lt;/h3&gt;

&lt;h4 id=&#34;who-spoke-the-most&#34;&gt;Who Spoke the Most?&lt;/h4&gt;

&lt;p&gt;We know that the story is about the four boys - Cartman, Stan, Kyle, and Kenny. Let&amp;rsquo;s see if that is what the lines are telling us. But first, we can see who actually appeared in all 18 seasons. It turned out that they are: &lt;em&gt;Stan, Kyle, Cartman, Gerald, Mr. Mackey, Randy, Kenny, Clyde, Sheila, Sharon, Wendy, Principal Victoria, and Liane (and also voices annotated as &amp;lsquo;Woman&amp;rsquo;, &amp;lsquo;Man&amp;rsquo;, and &amp;lsquo;Announcer&amp;rsquo;)&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Then, let&amp;rsquo;s see who spoke the most. We can check both the total number of lines and the number of words for each character.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../southpark_file/topspeaker.png&#34; class=&#34;img-responsive&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Clearly, Cartman is No. 1, followed by Stan and Kyle. Kenny, however, falls out of the top 5. Instead, Butters and Randy are in the top 5 list although their line shares are significantly less than the other three. Also something to note is Butters actually did not appear in all 18 seasons. He was introduced into the show in Season 2.&lt;/p&gt;

&lt;p&gt;So from now on, we can just focus on the top 5 speakers. The changes of their word shares over the seasons are shown below. Cartman remained to be No. 1 throughout the seasons, taking up to around 15% of the word shares. Stan and Kyle started off similarly like Cartman but their word shares decreased over time. Butters and Randy did not speak much in the first 4 seasons but they rise to be among the top speakers and ended up having similar word shares as Stan and Kyle, around 5%.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../southpark_file/wordshare.png&#34; class=&#34;img-responsive&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../southpark_file/linelength.png&#34; class=&#34;img-responsive&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The average lengths of the lines (defined as the total number of words divided by total number of lines) for Cartman, Stan, Kyle and Randy have not changed dramatically over the seasons. Also, their line lengths are relatively close, 10-15 words per line. But for Butters, his average line length shows a huge jump from Season 2 (when he was first introduced to the show) to season 3. I was very curious about exactly how this character was introduced. What did he say in Season 2? It turned out that he only said two lines:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Me, too!&amp;rdquo;&lt;br /&gt;
 &amp;ldquo;Pass this up.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;what-did-top-speakers-say&#34;&gt;What did Top Speakers Say?&lt;/h4&gt;

&lt;p&gt;So what exactly did the characters say? A word cloud from &lt;em&gt;all the lines&lt;/em&gt; is shown as the cover image of this post. But I am more interested in the &lt;em&gt;lines of the top speakers&lt;/em&gt;. What are their most frequent words and the most characteristic words?&lt;/p&gt;

&lt;p&gt;Finding out the most frequent words is simply a word count problem. A note here is that stopwords were removed. Below I show the top 20 most frequent words for our top 5 speakers.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../southpark_file/frequent_word.png&#34; class=&#34;img-responsive&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Compared to knowing the most frequent words, finding out the most characteristic words for each speaker is probably more interesting. Here, &lt;strong&gt;term frequency-inverse document frequency&lt;/strong&gt; or &lt;strong&gt;tf-idf&lt;/strong&gt; is used. It is often used in information retrieval and text mining as a measure to evaluate how important a word is to a document in a corpus. The tf-idf weight is composed by 2 components. one is the term frequency (tf) and it is simply the number of times term t appears in a document divided by the total number of terms in the corpus. The other component is the inverse document frequency (idf) and it is the natural log of the ratio between the total number of documents and the number of documents with term t in it. The final tf-idf weight is calculated as the product between tf and idf. So a term is more important to a document if it appears in this document for many times (large tf) but it does not appear in many of the documents in the corpus (large idf).&lt;/p&gt;

&lt;p&gt;For our top 5 speakers, their most important words and phrases are shown below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../southpark_file/important_word.png&#34; class=&#34;img-responsive&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../southpark_file/important_phrase.png&#34; class=&#34;img-responsive&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;There are some swear words, as you can see. And Kenny apparently had been killed many times!&lt;/p&gt;

&lt;h4 id=&#34;what-did-kenny-say&#34;&gt;What did Kenny Say?&lt;/h4&gt;

&lt;p&gt;As one of the four main characters, Kenny had significantly small word shares in the show. So who is Kenny? What did he do in the story? Do these lines tell anything about what he is like? We can simply construct a word cloud using Kenny&amp;rsquo;s lines in the dataset (with stopwords removed). Apparently, the F word is among the top of Kenny&amp;rsquo;s vocabulary, along with other swear words!&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../southpark_file/kenny_wordcloud.png&#34; class=&#34;img-responsive&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The word cloud is based on word frequency. Another way to look at this is the importance of the words. The most important 20 words in Kenny&amp;rsquo;s lines with the highest tf-idf weights are shown below. We know that the show is known for its use of profanity. It seems that Kenny, one of the main characters in the show who spoke the least mainly spoke profanity.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../southpark_file/topwords_kenny.png&#34; class=&#34;img-responsive&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;summary&#34;&gt;Summary&lt;/h3&gt;

&lt;p&gt;In this post, I walked you through my exploration of the South Park lines dataset and showed you what I learned about the show and the characters from this dataset. My next step is to build a classification model which is able to guess the speaker based on the lines given. Stay tuned :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>&#34;Toxic Beauty&#34;: Chemicals in Cosmetics</title>
      <link>/blog/2017-03-15_chemicals/</link>
      <pubDate>Wed, 15 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>/blog/2017-03-15_chemicals/</guid>
      <description>

&lt;p&gt;How many different beauty products do you apply onto your face and body everyday? How many chemical ingredients do they contain? And how many of those chemicals have potential health risks?&lt;/p&gt;

&lt;p&gt;I admit that I have been a little careless when it comes to the safety of my cosmetic products. Then one day I came across this &lt;a href=&#34;https://www.healthdata.gov/dataset/chemicals-cosmetics&#34;&gt;dataset&lt;/a&gt; from California Safe Cosmetics Program in California Department of Public Health. It appears that companies (manufacturer, packer, and/or distributor named on the product label) must submit a list of all products that contain any ingredients &lt;strong&gt;known or suspected to cause cancer, birth defects, or other developmental or reproductive harm&lt;/strong&gt; if the company has annual aggregate sales of cosmetic products of one million dollars or more, and has sold cosmetic products in California on or after January 1, 2007. So I started to dig into this dataset because I was very curious about what exactly were reported. Let me walk you through what I did. All codes are available in &lt;a href=&#34;https://github.com/yanfei-wu/chemical_cosmetic&#34;&gt;my Github Repository&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;data-cleaning&#34;&gt;Data Cleaning&lt;/h3&gt;

&lt;h4 id=&#34;missing-data&#34;&gt;Missing Data&lt;/h4&gt;

&lt;p&gt;The dataset has 80,004 rows and 22 columns. We can visualize columns containing missing data using a heatmap.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../chemicals_file/missingdata.png&#34; class=&#34;img-responsive&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;We can see that the majority of the rows in the &lt;code&gt;&#39;DiscontinuedDate&#39;&lt;/code&gt; and &lt;code&gt;&#39;ChemicalDateRemoved&#39;&lt;/code&gt; columns are missing. &lt;code&gt;&#39;CSFId&#39;&lt;/code&gt; and &lt;code&gt;&#39;CSF&#39;&lt;/code&gt; also contains a lot of missing data, followed by &lt;code&gt;&#39;CASNumber&#39;&lt;/code&gt; and &lt;code&gt;&#39;BrandName&#39;&lt;/code&gt;. We know that typical ways of dealing with missing data include a. deleting rows/columns with missing values and b. filling the missing values with some value. The first approach is the easist but caution needs to be taken because we can potentially lose some important information. In our case, the &lt;code&gt;&#39;DiscontinuedDate&#39;&lt;/code&gt; and &lt;code&gt;&#39;ChemicalDateRemoved&#39;&lt;/code&gt; columns give information about product discontinuation or reformulation. So here they are probably just not applicable (products still on sale and no reformulation has been done). We can leave them as they are. For the missing &lt;code&gt;&#39;CSFId&#39;&lt;/code&gt;, &lt;code&gt;&#39;CSF&#39;&lt;/code&gt; and &lt;code&gt;&#39;CasId&#39;&lt;/code&gt;, I do not have enough knowledge to fill in these values but I do not want to lose records by deleting corresponding rows. So again, let&amp;rsquo;s leave them as they are. &lt;code&gt;&#39;BrandName&#39;&lt;/code&gt; is actually something interesting. We can try to fill in the missing values using information given in the dataset, e.g., &lt;code&gt;&#39;CompanyName&#39;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../chemicals_file/missingdata_company.png&#34; class=&#34;img-responsive&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;These products with a missing &lt;code&gt;&#39;BrandName&#39;&lt;/code&gt; actually come from 6 companies and two of them are cosmetic companies. Based on a quick googling, they each carries one brand only (brand name is the same as the company name). So we can simply fill in the brand names for products from these two companies. In the remaining companies, two of them (Fisk Industries Inc. and Atlas Development Limited) only have a small number of records. So it is reasonable to look at them individually and fill in the missing brand names based on the brands they carry. For the remaining records, they can actually be filled with &amp;ldquo;Unknown&amp;rdquo; for simplicity.&lt;/p&gt;

&lt;h4 id=&#34;duplicates-and-unique-values&#34;&gt;Duplicates and Unique Values&lt;/h4&gt;

&lt;p&gt;The other problem a public dataset might have is duplicates. Note that before checking duplicates, the inconsistent format of string values (upper and lower cases are mixed) is corrected. 251 duplicated rows are found. Further inspection of these rows does not show any connection or anything in common. So they are simply dropped.&lt;/p&gt;

&lt;p&gt;The unique number of values for several columns are listed below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Unique number of &lt;code&gt;&#39;CDPHId&#39;&lt;/code&gt;: 26,036&lt;/li&gt;
&lt;li&gt;Unique number of &lt;code&gt;&#39;CompanyName&#39;&lt;/code&gt;: 508&lt;/li&gt;
&lt;li&gt;Unique number of &lt;code&gt;&#39;BrandName&#39;&lt;/code&gt;: 1,820&lt;/li&gt;
&lt;li&gt;Unique number of &lt;code&gt;&#39;ProductName&#39;&lt;/code&gt;: 23,992&lt;/li&gt;
&lt;li&gt;Unique number of &lt;code&gt;&#39;PrimaryCategory&#39;&lt;/code&gt;: 13&lt;/li&gt;
&lt;li&gt;Unique number of &lt;code&gt;&#39;SubCategory&#39;&lt;/code&gt;&amp;lsquo;: 89&lt;/li&gt;
&lt;li&gt;Unique number of &lt;code&gt;&#39;ChemicalName&#39;&lt;/code&gt;: 110&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Further inspection of the dataset shows that &lt;code&gt;&#39;CDPHId&#39;&lt;/code&gt; represents unique product. So the difference between number of &lt;code&gt;&#39;ProductName&#39;&lt;/code&gt; and &lt;code&gt;&#39;CDPHId&#39;&lt;/code&gt; indicates that there are products with the same name. We can actually generate a seperate dataframe storing the basic information (&lt;code&gt;&#39;CDPHId&#39;&lt;/code&gt;, &lt;code&gt;&#39;CompanyName&#39;&lt;/code&gt;, &lt;code&gt;&#39;BrandName&#39;&lt;/code&gt;, &lt;code&gt;&#39;ProductName&#39;&lt;/code&gt;) of unique products.&lt;/p&gt;

&lt;h3 id=&#34;data-visualization&#34;&gt;Data Visualization&lt;/h3&gt;

&lt;p&gt;There are several questions I am interested in. For example:&lt;br /&gt;
1. What are the most common reportable chemicals?&lt;br /&gt;
2. Which products have the largest number of reportable chemicals?&lt;br /&gt;
3. Which categories of products are reported most frequently?&lt;br /&gt;
4. Which companies/brands have the largest number of products reported?&lt;/p&gt;

&lt;h4 id=&#34;most-common-reportable-chemicals&#34;&gt;Most common reportable chemicals&lt;/h4&gt;

&lt;p&gt;The dataset is grouped by &lt;code&gt;&#39;ChemicalName&#39;&lt;/code&gt; and the number of unique &lt;code&gt;&#39;CDPHId&#39;&lt;/code&gt; is counted.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../chemicals_file/most_common_chemical.png&#34; class=&#34;img-responsive&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Looks like titanium dioxide is contained in the majority of the products reported. The exact harm of titanium dioxide is not well understood. It is generally considered to be a relatively inert, safe material, but when it is in the form of nanoparticles, some believe that it can penetrate the skin and cause potential health risk. Currently, only airborne, unbound titanium dioxide particle of respirable size is officially listed in &lt;a href=&#34;https://oehha.ca.gov/proposition-65/about-proposition-65&#34;&gt;California Proposition 65&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;All other chemicals are contained in much smaller number of products. The health risks for some of them are also controversial. FDA actually only takes legal action against cosmetic companies if there is enough evidence of a safety problem for consumers.&lt;/p&gt;

&lt;h4 id=&#34;products-with-the-largest-number-of-reportable-chemicals&#34;&gt;Products with the largest number of reportable chemicals&lt;/h4&gt;

&lt;p&gt;First, let&amp;rsquo;s look at some statistics about the number of reportable chemicals in the products:&lt;br /&gt;
- Minimum number of reportable chemicals in any product: 1&lt;br /&gt;
- Maximum number of reportable chemicals in any product: 10&lt;br /&gt;
- Median number of reportable chemicals in all product: 1.0&lt;br /&gt;
- Mean number of reportable chemicals in all product: 1.0970579198033492&lt;br /&gt;
- Standard deviation of the number of reportable chemicals in all product: 0.3771734727730194&lt;/p&gt;

&lt;p&gt;Looks like the majority of products in the dataset only contains one reportable chemical (highly likely to be titanium dioxide), but there are also products contain more than one reportable chemicals. What are they?&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../chemicals_file/top_product.png&#34; class=&#34;img-responsive&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;A lot of them are hair and skin care products!&lt;/p&gt;

&lt;h4 id=&#34;categories-of-products-reported-most-frequently&#34;&gt;Categories of products reported most frequently&lt;/h4&gt;

&lt;p&gt;Similarly, we can group the dataset by &lt;code&gt;&#39;PrimaryCategory&#39;&lt;/code&gt; and count the number of unique products.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../chemicals_file/category.png&#34; class=&#34;img-responsive&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Makeup products is No. 1. This is not surprising because most of them contain chemicals like titanium dioxide, mica, talc, etc.&lt;/p&gt;

&lt;h4 id=&#34;companies-brands-with-the-largest-number-of-products-reported&#34;&gt;Companies/Brands with the largest number of products reported&lt;/h4&gt;

&lt;p&gt;Another thing to look at is which companies/brands have the largest number of products reported. Again, simply group the data by &lt;code&gt;&#39;CompanyName&#39;&lt;/code&gt; or &lt;code&gt;&#39;BrandName&#39;&lt;/code&gt; and count the number of unique products.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../chemicals_file/company.png&#34; class=&#34;img-responsive&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;br /&gt;
&lt;img src=&#34;../chemicals_file/brand.png&#34; class=&#34;img-responsive&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;summary&#34;&gt;Summary&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;The potential risks of a lot of the chemicals are actually controversial and FDA does not take legal action against cosmetic companies unless there is enough evidence. So it is really up to us to decide whether we want to avoid some ingredients or not.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Compared to products with only one chemical reported like titanium dioxide (commonly used in sunscreens and makeups; probably hard to avoid), we should probably be more cautious about products containing several different kinds of potentially dangerous chemicals.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;According to the dataset, makeup is the No.1 category with the most products reported to have potentially dangerous chemicals and baby products seem to be the &amp;ldquo;safest&amp;rdquo;. The former is not surprising to most of us and the latter is reassuring!&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: the dataset maynot include all products containing carcinogens or developmental or reproductive toxicants due to companies failing to report.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>